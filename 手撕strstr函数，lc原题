-----------------------------
不多说，直接二重遍历看我最后的
时间复杂度我目测大部分人也是用
我这个方法
----------------------------
执行用时 :
4 ms
, 在所有 C++ 提交中击败了
89.82%
的用户
内存消耗 :
6.8 MB
, 在所有 C++ 提交中击败了
100.00%
的用户
炫耀一下:




class Solution {
public:
    int strStr(string haystack, string needle) {
        int length1=haystack.length();
        int length2=needle.length();
        if(length2==0)
        return 0;
        int cnt=0,result=-1;
        while(cnt<=(length1-length2))
        {
            if(haystack[cnt]==needle[0])
            {
                int cnt2=1;
                while(cnt2<length2)
                {
                    if(haystack[cnt+cnt2]==needle[cnt2])
                    cnt2++;
                    else
                    break;
                }
                if(cnt2==length2)
                {
                    result=cnt;
                    break;
                }
                else
                cnt++;
            }
            else
            cnt++;
        }
        return result;
    }
};
